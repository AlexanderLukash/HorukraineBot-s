import discord
import time
import sys
import traceback
import re
import asyncio
import random
from discord.ext import commands
import os
import pyshorteners
from discord.utils import get
from PIL import Image, ImageChops, ImageDraw, ImageFont
from io import BytesIO
import translators as ts
import aiohttp
import requests
import datetime




PREFIX = '.'
client = commands.Bot(command_prefix = PREFIX)
client.remove_command('help')
#Bot has been started
@client.event

async def on_ready():
    print("–ë–æ—Ç –ø—Ä–æ–∫–∏–Ω—É–≤—Å—è —Ç–∞ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!")
    await client.change_presence(status = discord.Status.online, activity=discord.Game('.help'))

for cog in os.listdir(r"cogs"):
    if cog.endswith(".py"):
        try:
            cog =f"cogs.{cog.replace('.py', '')}"
            client.load_extension(cog)

        except Exception as e:
            print(f"{cog} –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ.")
            raise e

# World
slavauk = ['—Å–ª–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—ñ', '—Å–ª–∞–≤–∞ —É–∫—Ä–∞–∏–Ω–µ', 'slava ukraini', "glory to ukraine"]
slavanac = ['slava nacii', 'glory of the nation', '—Å–ª–∞–≤–∞ –Ω–∞—Ü—ñ—ó', '—Å–ª–∞–≤–∞ –Ω–∞—Ü–∏–∏']
ukponad = ['ukraine', '—É–∫—Ä–∞–∏–Ω–∞', '—É–∫—Ä–∞—ó–Ω–∞']


# Clear messages
@client.command()
@commands.has_permissions(manage_messages = True)
async def clear(ctx, amount = 101):
    await ctx.channel.purge(limit=amount + 1)

# Kick user

@client.command()
@commands.has_permissions(kick_members= True)
async def kick(ctx, member: discord.Member = None, *, reason = None):
    await ctx.channel.purge(limit = 1)
    if member == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —É—á–∞—Å–Ω–∏–∫–∞, —è–∫–æ–≥–æ –∑–±–∏—Ä–∞—î—Ç–µ—Å—å –≤–∏–≥–Ω–∞—Ç–∏.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.kick @user spam```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    elif reason == None:
        emb = discord.Embed(title=":x:–ß—É–≤–∞—á–µ, —Ç–∏ —Ö–æ—á–µ—à—å –≤–∏–≥–Ω–∞—Ç–∏ —Ü—å–æ–º—É –≤—ã–ª—É–ø–∫–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫? ", description='–í–∫–∞–∂–∏ –ø—Ä–∏—á–∏–Ω—É, –∫–æ–∑–∞–∫.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.kick @user spam```', inline=False)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∏:', value='–ü—Ä–∏—á–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ. ||–ù–∞–≤—ñ—Ç—å –ø—Ä–∏—á–∏–Ω–∞: –º–æ—Å–∫–∞–ª—å||', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    else:
        emb = discord.Embed(title='–£—á–∞—Å–Ω–∏–∫', colour = discord.Color.purple())
        emb.set_author(name = member.name, icon_url= member.avatar_url)
        emb.set_thumbnail(url='https://www.upload.ee/image/14236852/_________-2.png')
        emb.add_field(name= 'üß® –ë—É–≤ –∫—ñ–∫–Ω—É—Ç–∏–π', value=f'–∑ —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –ø—Ä–∏—á–∏–Ω—ñ {reason}.')
        emb.set_footer(text='–¶–µ –∑—Ä–æ–±–∏–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
        await ctx.send(embed = emb)
        await member.send(embed = emb)
        await asyncio.sleep(2)
        await member.kick(reason=reason)

        
@client.command(pass_context=True)
async def botservers(ctx):
    await client.say("–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä—ñ–≤, –Ω–∞ —è–∫–∏—Ö —î —è —ñ—Å–Ω—É—é: " + str(len(client.servers)) + " —Å–µ—Ä–≤–µ—Ä—ñ–≤ü§è")
    
        
# Ban user
@client.command()
@commands.has_permissions(ban_members = True)
async def ban(ctx, member: discord.Member = None, time = None, *, reasone = None):
    await ctx.channel.purge(limit = 1)
    time_convert = {"s": 1, "m": 60, "h": 3600, "d": 86400}
    if member == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —É—á–∞—Å–Ω–∏–∫–∞, —è–∫–æ–º—É –∑–±–∏—Ä–∞—î—Ç–µ—Å—å –∑–∞–∫—Ä–∏—Ç–∏ —Ä–æ—Ç—è–∫—É.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.ban @user spam```', inline=False)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∏:', value='–ü—Ä–∏—á–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ. ||–ù–∞–≤—ñ—Ç—å –ø—Ä–∏—á–∏–Ω–∞: –ª–æ—Ö||', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    elif reasone == None:
        emb = discord.Embed(title=":x:–ß—É–≤–∞—á–µ, —Ç–∏ —Ö–æ—á–µ—à—å –∑–∞—Ç–∫–Ω—É—Ç–∏ —Ä–æ—Ç–∞ —Ü—å–æ–º—É –≤—ã–ª—É–ø–∫—É –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫? ",
                            description='–í–∫–∞–∂–∏ –ø—Ä–∏—á–∏–Ω—É, –∫–æ–∑–∞–∫.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.ban @user spam```', inline=False)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∏:', value='–ü—Ä–∏—á–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ. ||–ù–∞–≤—ñ—Ç—å –ø—Ä–∏—á–∏–Ω–∞: –º–æ—Å–∫–∞–ª—å||', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    tempmute = int(time[:-1]) * time_convert[time[-1]]
    emb = discord.Embed(title='–£—á–∞—Å–Ω–∏–∫', colour=discord.Color.purple())
    emb.set_author(name=member.name, icon_url=member.avatar_url)
    emb.set_thumbnail(url='https://www.upload.ee/image/14236852/_________-2.png')
    emb.add_field(name='ü•è –ë—É–≤ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π', value='–Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ.')
    emb.add_field(name=f'–ß–∞—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è {time}.', value=f'–ü–æ –ø—Ä–∏—á–∏–Ω—ñ {reasone}.', inline=False)
    emb.set_footer(text='–¶–µ –∑—Ä–æ–±–∏–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=emb)
    await member.send(embed=emb)
    await asyncio.sleep(2)
    await member.ban()
    await asyncio.sleep(tempmute)
    banned_user = await ctx.guild.bans()
    for ban_entry in banned_user:
        user = ban_entry.user
        await ctx.guild.unban(user)
        emb = discord.Embed(title='–£—á–∞—Å–Ω–∏–∫', colour=discord.Color.purple())
        emb.set_author(name=user.name, icon_url=user.avatar_url)
        emb.set_thumbnail(url='https://www.upload.ee/image/14236852/_________-2.png')
        emb.add_field(name='‚ú® –ë—É–≤ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∏–π', value='–Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ.')
        emb.set_footer(text='–¶–µ –∑—Ä–æ–±–∏–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emb)
    return

# Unban user
@client.command()
@commands.has_permissions(ban_members = True)
async def unban(ctx, *, member):
    await ctx.channel.purge(limit=1)
    banned_user = await ctx.guild.bans()
    for ban_entry in banned_user:
        user = ban_entry.user
        await ctx.guild.unban(user)
        emb = discord.Embed(title='–£—á–∞—Å–Ω–∏–∫', colour=discord.Color.purple())
        emb.set_author(name=user.name, icon_url=user.avatar_url)
        emb.set_thumbnail(url='https://www.upload.ee/image/14236852/_________-2.png')
        emb.add_field(name='‚ú® –ë—É–≤ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∏–π', value='–Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ.')
        emb.set_footer(text='–¶–µ –∑—Ä–æ–±–∏–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emb)
    return

# Mute user
@client.command()
@commands.has_permissions(manage_roles = True)
async def mute(ctx, member: discord.Member = None, time = None, *, reasone = None):
    await ctx.channel.purge(limit=1)
    muted_role = discord.utils.get(ctx.guild.roles, name= "Muted")
    time_convert = {"s": 1, "m": 60, "h": 3600, "d": 86400}
    if member == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —É—á–∞—Å–Ω–∏–∫–∞, —è–∫–æ–º—É –∑–±–∏—Ä–∞—î—Ç–µ—Å—å –∑–∞–∫—Ä–∏—Ç–∏ —Ä–æ—Ç—è–∫—É.', colour = discord.Color.purple())
        emb.add_field(name = '–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.mute @user 10s spam```', inline=False)
        emb.add_field(name = '–í–∏–¥–∏ —á–∞—Å—É:', value='s - —Å–µ–∫—É–Ω–¥–∏; m - —Ö–≤–∏–ª–∏–Ω–∏; h - –≥–æ–¥–∏–Ω–∏; d - –¥–Ω—ñ', inline=False)
        emb.add_field(name = '–ü—Ä–∏—á–∏–Ω–∏:', value='–ü—Ä–∏—á–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ. ||–ù–∞–≤—ñ—Ç—å –ø—Ä–∏—á–∏–Ω–∞: –ª–æ—Ö||', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed = emb)
    elif time == None:
        emb = discord.Embed(title=":x:–í–∏–ª—É–ø–æ–∫, –≤–∫–∞–∂–∏ —á–∞—Å!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —á–∞—Å, –Ω–∞ —è–∫–∏–π —Ç—Ä–µ–±–∞ –∑–∞–∫—Ä–∏—Ç–∏ —Ä–æ—Ç—è–∫—É.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.mute @user 10s spam```', inline=False)
        emb.add_field(name='–í–∏–¥–∏ —á–∞—Å—É:', value='s - —Å–µ–∫—É–Ω–¥–∏; m - —Ö–≤–∏–ª–∏–Ω–∏; h - –≥–æ–¥–∏–Ω–∏; d - –¥–Ω—ñ', inline=False)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∏:', value='–ü—Ä–∏—á–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ. ||–ù–∞–≤—ñ—Ç—å –ø—Ä–∏—á–∏–Ω–∞: –ª–æ—Ö||', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    elif reasone == None:
        emb = discord.Embed(title=":x:–ß—É–≤–∞—á–µ, —Ç–∏ —Ö–æ—á–µ—à—å –∑–∞—Ç–∫–Ω—É—Ç–∏ —Ä–æ—Ç–∞ —Ü—å–æ–º—É –≤—ã–ª—É–ø–∫—É –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫? ", description='–í–∫–∞–∂–∏ –ø—Ä–∏—á–∏–Ω—É, –∫–æ–∑–∞–∫.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.mute @user 10s spam```', inline=False)
        emb.add_field(name='–í–∏–¥–∏ —á–∞—Å—É:', value='s - —Å–µ–∫—É–Ω–¥–∏; m - —Ö–≤–∏–ª–∏–Ω–∏; h - –≥–æ–¥–∏–Ω–∏; d - –¥–Ω—ñ', inline=False)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∏:', value='–ü—Ä–∏—á–∏–Ω–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ. ||–ù–∞–≤—ñ—Ç—å –ø—Ä–∏—á–∏–Ω–∞: –ª–æ—Ö||', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    elif muted_role == None or muted_role == False:
        permissions = discord.Permissions(change_nickname=True)
        mute_role = await ctx.guild.create_role(name='Muted', permissions=permissions, color= discord.Color.red())
        for text_channel in ctx.guild.text_channels:
            await text_channel.set_permissions(mute_role, send_messages=False)
    else:
        tempmute = int(time[:-1]) * time_convert[time[-1]]
        emd = discord.Embed(title='üë§ –£—á–∞—Å–Ω–∏–∫—É',
                            description=f'{member.mention} –∑–∞–∫—Ä–∏–≤ —Ä–æ—Ç—è–∫—É, –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä: @{ctx.author.name} –Ω–∞ {time}, –ø–æ –ø—Ä–∏—á–∏–Ω—ñ {reasone}.',
                            colour=discord.Color.purple())
        emd.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emd)
        await member.add_roles(muted_role)
        await asyncio.sleep(tempmute)
        await member.remove_roles(muted_role)
        emd = discord.Embed(title='‚ú® –£—á–∞—Å–Ω–∏–∫', description=f'{member.mention} –∑–Ω–æ–≤—É –º–æ–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ä–æ—Ç—è–∫—É.',
                            colour=discord.Color.purple())
        emd.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emd)

#Unmute
@client.command()
@commands.has_permissions(manage_roles = True)
async def unmute(ctx, member: discord.Member = None):
    await ctx.channel.purge(limit=1)
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")
    if member == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —É—á–∞—Å–Ω–∏–∫–∞, —è–∫–æ–º—É –∑–±–∏—Ä–∞—î—Ç–µ—Å—å –∑–∞–∫—Ä–∏—Ç–∏ —Ä–æ—Ç—è–∫—É.', colour = discord.Color.purple())
        emb.add_field(name = '–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.unmute @user```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed = emb)
    else:
        emd = discord.Embed(title='‚ú® –£—á–∞—Å–Ω–∏–∫', description=f'{member.mention} –∑–Ω–æ–≤—É –º–æ–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ä–æ—Ç—è–∫—É.',
                            colour=discord.Color.purple())
        emd.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emd)
        await member.remove_roles(muted_role)

# Mention user
@client.command()
async def tag(ctx, member: discord.Member = None):
    await ctx.channel.purge(limit=1)
    if member == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —É—á–∞—Å–Ω–∏–∫–∞, —è–∫–æ–≥–æ –∑–±–∏—Ä–∞—î—Ç–µ—Å—å –ø–æ–∫–ª–∏–∫–∞—Ç–∏.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.tag @user```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    emb = discord.Embed(title='üîî –£—á–∞—Å–Ω–∏–∫', description=f'**{member.mention}, —Ç–µ–±–µ –≥—É–∫–∞—î –≥–∞–π–¥–∞–º–∞–∫–∞: {ctx.author.mention}**', colour = discord.Color.purple())
    emb.set_footer(text = ctx.author.name, icon_url= ctx.author.avatar_url)
    emb.set_thumbnail(url=member.avatar_url)
    await ctx.send(embed = emb)
    await member.send(embed = emb)

#Show avatar
@client.command()
async def avatar(ctx, member: discord.Member = None):
    if not member:
        await ctx.channel.purge(limit=1)
        emb = discord.Embed(title = "üîó –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", url=ctx.author.avatar_url)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_image(url=ctx.author.avatar_url)
        emb.set_footer(text=f'–ê–≤–∞—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {ctx.author.name}.')
        await ctx.send(embed=emb)
    else:
        await ctx.channel.purge(limit=1)
        emb = discord.Embed(title = "üîó –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", url=member.avatar_url)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_image(url=member.avatar_url)
        emb.set_footer(text=f'–ê–≤–∞—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {member.name}.')
        await ctx.send(embed=emb)

#Show server avatar
@client.command()
async def serverava(ctx):
        await ctx.channel.purge(limit=1)
        emb = discord.Embed(title = "üîó –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", url=ctx.guild.icon_url)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_image(url=ctx.guild.icon_url)
        emb.set_footer(text=f'–ê–≤–∞—Ç–∞—Ä —Å–µ—Ä–≤–µ—Ä–∞: {ctx.guild.name}.')
        await ctx.send(embed=emb)

format = "**%d** %b | %Y "
format2 = "%d %b | %B %Y "
#Server Info
@client.command()
@commands.guild_only()
async def server(ctx, member: discord.Member = None):
    await ctx.channel.purge(limit=1)
    name = ctx.guild.name
    description = str(ctx.guild.description)
    role_count = len(ctx.guild.roles)
    id = str(ctx.guild.id)
    memberCount = str(ctx.guild.member_count)
    text_channels = len(ctx.guild.text_channels)
    voice_channels = len(ctx.guild.voice_channels)
    channels = text_channels + voice_channels
    icon = str(ctx.guild.icon_url)
    embed = discord.Embed(
        title = name,
        color=discord.Color.purple()
    )
    embed.set_thumbnail(url=icon)
    embed.set_author(name = "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä: ", icon_url=icon)
    embed.add_field(name=":id: Server ID", value=id, inline=True)
    embed.add_field(name=":clock1: –°—Ç–≤–æ—Ä–µ–Ω–∏–π", value=f"{ctx.guild.created_at.strftime(format)}", inline=True)
    embed.add_field(name=f":closed_lock_with_key: –†–æ–ª—ñ", value=f"**{role_count}** –†–æ–ª–µ–π")
    embed.add_field(name=f":busts_in_silhouette: –£—á–∞—Å–Ω–∏–∫–∏ ({memberCount})", value=f"**{memberCount}** –£—á–∞—Å–Ω–∏–∫—ñ–≤", inline=True)
    embed.add_field(name= f":speech_balloon: –ö–∞–Ω–∞–ª–∏ ({channels})", value= f"**{text_channels}** –¢–µ–∫—Å—Ç–æ–≤—ñ| **{voice_channels}** –ì–æ–ª–æ—Å–æ–≤—ñ")
    embed.add_field(name= "üçº –°—Ç–≤–æ—Ä–µ–Ω–∏–π", value= "by Lukash#2604")
    embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#Randomly
@client.command()
async def roll(ctx, snum = None):
    await ctx.channel.purge(limit=1)
    if snum == None:
        emb = discord.Embed(title='üé≤ –í–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ:', description= f"**{(random.randint(1,101))}**", color= discord.Color.purple())
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        await ctx.send(embed = emb)
    else:
        emb = discord.Embed(title='üé≤ –í–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ:', description=f"**{(random.randint(1, int(snum)))}**", color=discord.Color.purple())
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        await ctx.send(embed=emb)

#Coin:
@client.command()
async def coin(ctx, snum = None):
    await ctx.channel.purge(limit=1)
    variants = ['–û—Ä–µ–ª', '–†–µ—à–∫–∞']
    emb = discord.Embed(title='ü™ô –í–∏–ø–∞–ª–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –º–æ–Ω–µ—Ç–∏:', description=f"**{(random.choice(variants))}**", colour = discord.Color.purple())
    emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
    await ctx.send(embed = emb)

#Short your link
@client.command()
async def short(ctx, url = None):
    await ctx.channel.purge(limit=1)
    if url == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —è–∫–µ –∑–±–∏—Ä–∞—î—Ç–µ—Å—å —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.short https://www.google.com```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    else:
        url = url
        s = pyshorteners.Shortener()
        shorturl = s.tinyurl.short(url)
        emb = discord.Embed(title = 'üîó –û—Å—å –≤–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:', description= f"Link: {shorturl}")
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.send(embed = emb)

#TicTacToe
player1 = ""
player2 = ""
turn = ""
gameOver = True

board = []

winningConditions = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
]

@client.command()
async def tictactoe(ctx, p1: discord.Member, p2: discord.Member):
    global count
    global player1
    global player2
    global turn
    global gameOver

    if gameOver:
        global board
        board = [":white_large_square:", ":white_large_square:", ":white_large_square:",
                 ":white_large_square:", ":white_large_square:", ":white_large_square:",
                 ":white_large_square:", ":white_large_square:", ":white_large_square:"]
        turn = ""
        gameOver = False
        count = 0

        player1 = p1
        player2 = p2

        # print the board
        line = ""
        for x in range(len(board)):
            if x == 2 or x == 5 or x == 8:
                line += " " + board[x]
                await ctx.send(line)
                line = ""
            else:
                line += " " + board[x]

        # determine who goes first
        num = random.randint(1, 2)
        if num == 1:
            turn = player1
            await ctx.send("–¶–µ —Ö—ñ–¥: <@" + str(player1.id) + ">.")
        elif num == 2:
            turn = player2
            await ctx.send("–¶–µ —Ö—ñ–¥: <@" + str(player2.id) + ">.")
    else:
        await ctx.send("–í–∏ –≤–∂–µ –≥—Ä–∞—î—Ç–µ! –ó–∞–∫—ñ–Ω—á–∏—Ç—å —Ü—é –≥—Ä—É, —â–æ–± –ø–æ—á–∞—Ç–∏ –Ω–æ–≤—É.")

@client.command()
async def place(ctx, pos: int):
    global turn
    global player1
    global player2
    global board
    global count
    global gameOver

    if not gameOver:
        mark = ""
        if turn == ctx.author:
            if turn == player1:
                mark = ":regional_indicator_x:"
            elif turn == player2:
                mark = ":o2:"
            if 0 < pos < 10 and board[pos - 1] == ":white_large_square:" :
                board[pos - 1] = mark
                count += 1
                # print the board
                line = ""
                for x in range(len(board)):
                    if x == 2 or x == 5 or x == 8:
                        line += " " + board[x]
                        await ctx.send(line)
                        line = ""
                    else:
                        line += " " + board[x]

                checkWinner(winningConditions, mark)
                print(count)
                if gameOver == True:
                    await ctx.send(mark + " –ø–µ—Ä–µ–º—ñ–≥!")
                elif count >= 9:
                    gameOver = True
                    await ctx.send("–ù—ñ—á–∏—è!")
                # switch turns
                if turn == player1:
                    turn = player2
                elif turn == player2:
                    turn = player1
            else:
                await ctx.send("–í–ø–µ–≤–Ω—ñ—Ç—å—Å—è, —â–æ –≤–∏ –≤–∏–±—Ä–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 1 –¥–æ 9.")
        else:
            await ctx.send("–¶–µ –Ω–µ —Ç–≤—ñ–π —Ö—ñ–¥.")
    else:
        await ctx.send("–†–æ–∑–ø–æ—á–Ω—ñ—Ç—å –≥—Ä—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏: .tictactoe.")

def checkWinner(winningConditions, mark):
    global gameOver
    for condition in winningConditions:
        if board[condition[0]] == mark and board[condition[1]] == mark and board[condition[2]] == mark:
            gameOver = True

@tictactoe.error
async def tictactoe_error(ctx, error):
    print(error)
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –æ–ø–æ–Ω–µ–Ω—Ç–∞.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ç–µ–≥ –æ–ø–æ–Ω–µ–Ω—Ç–∞.")

@place.error
async def place_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–æ–∑–∏—Ü—ñ—é, —è–∫—É –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ–∑–Ω–∞—á–∏—Ç–∏.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("–û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤–≤–µ–¥—ñ—Ç—å —Ü—ñ–ª–µ —á–∏—Å–ª–æ.")

#mems
@client.command(pass_context=True)
async def meme(ctx):
    await ctx.channel.purge(limit=1)
    embed = discord.Embed(title="", description="", colour = discord.Color.purple())

    async with aiohttp.ClientSession() as cs:
        URL = ['https://www.reddit.com/r/RussiaUkraineWarMemes/new.json?sort=hot', 'https://www.reddit.com/r/ukrainememes/new.json?sort=hot', 'https://www.reddit.com/r/uamemesforces/new.json?sort=hot', 'https://www.reddit.com/r/ukraine22memes/new.json?sort=hot', 'https://www.reddit.com/r/UkrainianMemes/new.json?sort=hot', 'https://www.reddit.com/r/Ukraine_in_memes/new.json?sort=hot', 'https://www.reddit.com/r/dankmemes/new.json?sort=hot']
        async with cs.get(random.choice(URL)) as r:
            res = await r.json()
            embed.set_image(url=res['data']['children'] [random.randint(0, 25)]['data']['url'])
            embed.set_footer(text = ctx.author.name, icon_url= ctx.author.avatar_url)
            embed.set_author(name = client.user.name, icon_url= client.user.avatar_url)
            await ctx.send(embed=embed)

#Create a text channel
@client.command()
@commands.has_permissions(manage_channels = True)
async def createtext(ctx, channel_name):
    await ctx.channel.purge(limit=1)
    guild = ctx.guild
    channel = await guild.create_text_channel(channel_name)

#Create a category
@client.command()
@commands.has_permissions(manage_channels = True)
async def createcat(ctx, category_name):
    guild = ctx.guild
    await guild.create_category_channel(category_name)
    await ctx.channel.purge(limit=1)

#Delete a text channel
@client.command()
@commands.has_permissions(manage_channels = True)
async def deletetext(ctx, channel_name):
    await ctx.channel.purge(limit=1)
    channel = discord.utils.get(ctx.guild.channels, name=channel_name)
    if channel:
        await channel.delete()

#Dog
@client.command()
async def dog(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get('https://some-random-api.ml/img/dog')
      dogjson = await request.json()
      # This time we'll get the fact request as well!
      request2 = await session.get('https://some-random-api.ml/facts/dog')
      factjson = await request2.json()
      translator_factjson = ts.google(factjson['fact'], translator=ts.google, to_language='uk')
      translation = str(translator_factjson)
   embed = discord.Embed(title="üê∂ –ü–µ—Å–∏–∫!", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.add_field(name="–¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:", value=f"**{translation}**")
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#cat
@client.command()
async def cat(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get('https://some-random-api.ml/img/cat')
      dogjson = await request.json()
      # This time we'll get the fact request as well!
      request2 = await session.get('https://some-random-api.ml/facts/cat')
      factjson = await request2.json()
      translator_factjson = ts.google(factjson['fact'], translator=ts.google, to_language='uk')
      translation = str(translator_factjson)
   embed = discord.Embed(title="üò∫ –ö–æ—Ç–∏–∫!", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.add_field(name="–¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:", value=f"**{translation}**")
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#panda
@client.command()
async def panda(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get('https://some-random-api.ml/img/panda')
      dogjson = await request.json()
      # This time we'll get the fact request as well!
      request2 = await session.get('https://some-random-api.ml/facts/panda')
      factjson = await request2.json()
      translator_factjson = ts.google(factjson['fact'], translator=ts.google, to_language='uk')
      translation = str(translator_factjson)
   embed = discord.Embed(title="üêº –ü–∞–Ω–¥–∞!", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.add_field(name="–¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:", value=f"**{translation}**")
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#fox
@client.command()
async def fox(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get('https://some-random-api.ml/img/fox')
      dogjson = await request.json()
      # This time we'll get the fact request as well!
      request2 = await session.get('https://some-random-api.ml/facts/fox')
      factjson = await request2.json()
      translator_factjson = ts.google(factjson['fact'], translator=ts.google, to_language='uk')
      translation = str(translator_factjson)
   embed = discord.Embed(title="ü¶ä –õ–∏—Å!", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.add_field(name="–¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:", value=f"**{translation}**")
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#bird
@client.command()
async def bird(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get('https://some-random-api.ml/img/bird')
      dogjson = await request.json()
      # This time we'll get the fact request as well!
      request2 = await session.get('https://some-random-api.ml/facts/bird')
      factjson = await request2.json()
      translator_factjson = ts.google(factjson['fact'], translator=ts.google, to_language='uk')
      translation = str(translator_factjson)
   embed = discord.Embed(title="üêî –ü—Ç–∞—à–∫–∞!", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.add_field(name="–¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:", value=f"**{translation}**")
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#Koala
@client.command()
async def koala(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get('https://some-random-api.ml/img/Koala')
      dogjson = await request.json()
      # This time we'll get the fact request as well!
      request2 = await session.get('https://some-random-api.ml/facts/Koala')
      factjson = await request2.json()
      translator_factjson = ts.google(factjson['fact'], translator=ts.google, to_language='uk')
      translation = str(translator_factjson)
   embed = discord.Embed(title="üê® –ö–æ–∞–ª–∞!", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.add_field(name="–¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:", value=f"**{translation}**")
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#Joke
@client.command()
async def joke(ctx):
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
       request2 = await session.get('https://some-random-api.ml/joke')
       factjson = await request2.json()
       translator_factjson = ts.google(factjson['joke'], translator=ts.google, to_language='uk')
       translation = str(translator_factjson)
       embed = discord.Embed(title="üÉè –ñ–∞—Ä—Ç!", color=discord.Color.purple())
       embed.add_field(name="HorukraineBot's", value=f"**{translation}**")
       embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
       embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
       await ctx.send(embed=embed)

#anime
@client.command()
async def anime(ctx):
   animes = ["https://some-random-api.ml/animu/wink", "https://some-random-api.ml/animu/pat", "https://some-random-api.ml/animu/hug"]
   await ctx.channel.purge(limit=1)
   async with aiohttp.ClientSession() as session:
      request = await session.get(random.choice(animes))
      dogjson = await request.json()
      # This time we'll get the fact request as well!
   embed = discord.Embed(title="", color=discord.Color.purple())
   embed.set_image(url=dogjson['link'])
   embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
   embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
   await ctx.send(embed=embed)

#Create password
@client.command()
async def password(ctx, length: int = None):
    await ctx.channel.purge(limit=1)
    chars = '+-/*!&$#?=@<>abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
    length = length
    password = ''

    if length == None:
        for i in range(8):
            password += random.choice(chars)
        embed = discord.Embed(title = "–ü–∞—Ä–æ–ª—å –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.", colour = discord.Color.purple())
        embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.add_field(name="üßæ –ü–∞—Ä–æ–ª—å:", value=f"```{password}```", inline=False)
        embed.add_field(name="–í–∏–¥ –∫–æ–º–∞–Ω–¥–∏:", value=f"```.password 21```", inline=False)
        embed.add_field(name="–î–æ–≤–∂–∏–Ω–∞ –ø–∞—Ä–æ–ª—é:", value=f"*–ó 1 –¥–æ 1000 —Å–∏–º–≤–æ–ª—ñ–≤.*", inline=False)
        await ctx.author.send(embed=embed)
    else:
        length = length
        for i in range(length):
            password += random.choice(chars)
        embed = discord.Embed(title="üîë –ü–∞—Ä–æ–ª—å –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.", colour=discord.Color.purple())
        embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.add_field(name="üßæ –ü–∞—Ä–æ–ª—å:", value=f"```{password}```", inline=False)
        embed.add_field(name="–í–∏–¥ –∫–æ–º–∞–Ω–¥–∏:", value=f"```.password 21```", inline=False)
        embed.add_field(name="–î–æ–≤–∂–∏–Ω–∞ –ø–∞—Ä–æ–ª—é:", value=f"*–ó 1 –¥–æ 1000 —Å–∏–º–≤–æ–ª—ñ–≤.*", inline=False)
        await ctx.author.send(embed=embed)

#weathering
@client.command()
async def weather(ctx, *, city: str = None):
    await ctx.channel.purge(limit=1)
    if city == None:
        emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –º—ñ—Å—Ç–æ!",
                            description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ –º—ñ—Å—Ç–æ, –¥–µ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.',
                            colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.weather citi```', inline=False)
        emb.add_field(name='–ù–∞–∑–≤—É –º—ñ—Å—Ç–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç–∏:', value='```–Ω–∞ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π —Ç–∞ –º–æ—Å–∫–∞–ª—å—Å—å–∫—ñ–π –º–æ–≤—ñ.```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    else:
        api_key = "f2954a7666f59b7c9b62f994ad7298b6"
        base_url = "http://api.openweathermap.org/data/2.5/weather?"
        city_name = city
        complete_url = base_url + "appid=" + api_key + "&q=" + city_name
        response = requests.get(complete_url)
        x = response.json()
        channel = ctx.message.channel
        if x["cod"] != "404":
            async with channel.typing():
                y = x["main"]
                current_temperature = y["temp"]
                current_temperature_celsiuis = str(round(current_temperature - 273.15))
                current_pressure = y["pressure"]
                current_humidity = y["humidity"]
                z = x["weather"]
                weather_description = z[0]["description"]
                ts_weather_description = ts.google(weather_description, translator=ts.google, to_language='uk')
                eather_description = z[0]["description"]
                embed = discord.Embed(title=f"üåà –ü–æ–≥–æ–¥–∞ –≤ {city_name}",
                                      color=ctx.guild.me.top_role.color,
                                      timestamp=ctx.message.created_at, )
                embed.add_field(name="‚õÖ –û–ø–∏—Å:", value=f"**{ts_weather_description}**", inline=False)
                embed.add_field(name="üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞(C):", value=f"**{current_temperature_celsiuis}¬∞C**", inline=False)
                embed.add_field(name="üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è(%):", value=f"**{current_humidity}%**", inline=False)
                embed.add_field(name="üóú –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∏–π —Ç–∏—Å–∫(hPa):", value=f"**{current_pressure}hPa**", inline=False)
                embed.set_thumbnail(url="https://i.ibb.co/CMrsxdX/weather.png")
                embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
                embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
                await channel.send(embed=embed)
        else:
            emb = discord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –º—ñ—Å—Ç–æ!",
                                description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –º—ñ—Å—Ç–æ, –¥–µ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.',
                                colour=discord.Color.purple())
            emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.weather citi```', inline=False)
            emb.add_field(name='–ù–∞–∑–≤—É –º—ñ—Å—Ç–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç–∏:', value='```–Ω–∞ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π —Ç–∞ –º–æ—Å–∫–∞–ª—å—Å—å–∫—ñ–π –º–æ–≤—ñ.```',
                          inline=False)
            emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
            emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.author.send(embed=emb)

#crypto
@client.command()
async def crypto(ctx, type = None):
   await ctx.channel.purge(limit=1)
   if type == None:
       emb = discord.Embed(title=":x:–í–∏ –≤–∫–∞–∑–∞–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É!",
                           description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –≤–∞–ª—é—Ç—É, –∫—É—Ä—Å —è–∫–æ—ó —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.',
                           colour=discord.Color.purple())
       emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.crypto BTC```', inline=False)
       emb.add_field(name='–î–æ—Å—Ç—É–ø–Ω—ñ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏:', value='```BTC, ETH, LTC, BUSD, SOL, USDT, XRP, BNB, ADA, USDS```',
                     inline=False)
       emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
       emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
       await ctx.author.send(embed=emb)
   elif type == "BTC":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Bitcoin!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/64px-Bitcoin.svg.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "ETH":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Ethereum!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://static.okx.com/cdn/assets/imgs/221/5F33E3F751873296.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "LTC":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=LTC&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Litecoin!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://s2.coinmarketcap.com/static/img/coins/200x200/2.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "BUSD":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=BUSD&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å BUSD!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://changenow.io/images/cached/busdbsc.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "SOL":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=SOL&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Solana!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://cdn3d.iconscout.com/3d/premium/thumb/solana-4437052-3684819.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "USDT":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Tether!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://s2.coinmarketcap.com/static/img/coins/200x200/825.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "XRP":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=XRP&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å XRP!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://totalcoin.io/uploads/coins/big/xrp.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "BNB":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=BNB&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Binance Coin!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://sapienwallet.com/wp-content/uploads/2020/11/logo2.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "ADA":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=ADA&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å Cardano!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://assets-global.website-files.com/5e73a1e3ba24f2cd5dd2232a/620b32e6370a500fec9b11c5_ada.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   elif type == "USDS":
       async with aiohttp.ClientSession() as session:
           request2 = await session.get('https://min-api.cryptocompare.com/data/price?fsym=USDS&tsyms=USD,UAH,EUR')
           factjson = await request2.json()
           embed = discord.Embed(title="üí± –ö—É—Ä—Å USD Coin!", color=discord.Color.purple())
           embed.add_field(name="üíµ USD:", value=f"**{factjson['USD']}**", inline=False)
           embed.add_field(name="üí∂ EUR:", value=f"**{factjson['EUR']}**", inline=False)
           embed.add_field(name="üí≥ UAH:", value=f"**{factjson['UAH']}**", inline=False)
           embed.set_thumbnail(url='https://totalcoin.io/uploads/coins/big/usdc.png')
           embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
           embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
           await ctx.send(embed=embed)
   else:
       emb = discord.Embed(title=":x:–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É!",
                           description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –≤–∞–ª—é—Ç—É, –∫—É—Ä—Å —è–∫–æ—ó —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.',
                           colour=discord.Color.purple())
       emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.crypto BTC```', inline=False)
       emb.add_field(name='–î–æ—Å—Ç—É–ø–Ω—ñ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏:', value='```BTC, ETH, LTC, BUSD, SOL, USDT, XRP, BNB, ADA, USDS```',
                     inline=False)
       emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
       emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
       await ctx.author.send(embed=emb)

#rate
@client.command()
async def rate(ctx, type = None):
    await ctx.channel.purge(limit=1)
    today = datetime.datetime.now()
    today_format = today.strftime("%d** **%m** **%Y")
    if type == None:
        emb = discord.Embed(title=":x:–í–∏ –≤–∫–∞–∑–∞–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤–∞–ª—é—Ç—É!",
                            description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –≤–∞–ª—é—Ç—É, –∫—É—Ä—Å —è–∫–æ—ó —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.',
                            colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.rate USD```', inline=False)
        emb.add_field(name='–î–æ—Å—Ç—É–ø–Ω—ñ –≤–∞–ª—é—Ç–∏:', value='```USD, EUR, GBP, CNY, PLN```',
                      inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    elif type == "USD":
        async with aiohttp.ClientSession() as session:
            request2 = await session.get('https://api.monobank.ua/bank/currency')
            rates = await request2.json()
            embed = discord.Embed(title="üí± –ö—É—Ä—Å –î–æ–ª–∞—Ä—É!", color=discord.Color.purple())
            embed.add_field(name="üíµ USD:", value=f"**{rates[0]['rateSell']}**", inline=False)
            embed.add_field(name="üìÜ –î–∞—Ç–∞:", value=f"**{today_format}**", inline=False)
            embed.set_thumbnail(url='https://www.pngarts.com/files/3/Green-Dollar-PNG-Picture.png')
            embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
            embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
    elif type == "EUR":
        async with aiohttp.ClientSession() as session:
            request2 = await session.get('https://api.monobank.ua/bank/currency')
            rates = await request2.json()
            embed = discord.Embed(title="üí± –ö—É—Ä—Å –Ñ–≤—Ä–æ!", color=discord.Color.purple())
            embed.add_field(name="üí∂ EUR:", value=f"**{rates[1]['rateSell']}**", inline=False)
            embed.add_field(name="üìÜ –î–∞—Ç–∞:", value=f"**{today_format}**", inline=False)
            embed.set_thumbnail(url='https://iconape.com/wp-content/png_logo_vector/eur.png')
            embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
            embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
    elif type == "GBP":
        async with aiohttp.ClientSession() as session:
            request2 = await session.get('https://api.monobank.ua/bank/currency')
            rates = await request2.json()
            embed = discord.Embed(title="üí± –ö—É—Ä—Å –§—É–Ω—Ç—É —Å—Ç–µ—Ä–ª—ñ–Ω–≥—É!", color=discord.Color.purple())
            embed.add_field(name="üí≥ GBP:", value=f"**{rates[3]['rateCross']}**", inline=False)
            embed.add_field(name="üìÜ –î–∞—Ç–∞:", value=f"**{today_format}**", inline=False)
            embed.set_thumbnail(url='https://images.vexels.com/media/users/3/135999/isolated/preview/6c3f3472afd2cc726de1a1779b868503-gbp-pound-coin-icon.png')
            embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
            embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
    elif type == "CNY":
        async with aiohttp.ClientSession() as session:
            request2 = await session.get('https://api.monobank.ua/bank/currency')
            rates = await request2.json()
            embed = discord.Embed(title="üí± –ö—É—Ä—Å –ö–∏—Ç–∞–π—Å–∫–æ–≥–æ —é–∞–Ω—é!", color=discord.Color.purple())
            embed.add_field(name="üí≥ CNY:", value=f"**{rates[6]['rateCross']}**", inline=False)
            embed.add_field(name="üìÜ –î–∞—Ç–∞:", value=f"**{today_format}**", inline=False)
            embed.set_thumbnail(url='https://ecnydigitalyuan.com/wp-content/uploads/2021/04/e-cny-1.png')
            embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
            embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
    elif type == "PLN":
        async with aiohttp.ClientSession() as session:
            request2 = await session.get('https://api.monobank.ua/bank/currency')
            rates = await request2.json()
            embed = discord.Embed(title="üí± –ö—É—Ä—Å –ó–ª–æ—Ç–æ–≥–æ!", color=discord.Color.purple())
            embed.add_field(name="üí≥ PLN:", value=f"**{rates[82]['rateCross']}**", inline=False)
            embed.add_field(name="üìÜ –î–∞—Ç–∞:", value=f"**{today_format}**", inline=False)
            embed.set_thumbnail(url='https://cdn-icons-png.flaticon.com/512/2413/2413195.png')
            embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
            embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
    else:
        emb = discord.Embed(title=":x:–í–∏ –≤–∫–∞–∑–∞–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤–∞–ª—é—Ç—É!",
                            description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –≤–∞–ª—é—Ç—É, –∫—É—Ä—Å —è–∫–æ—ó —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.',
                            colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.rate USD```', inline=False)
        emb.add_field(name='–î–æ—Å—Ç—É–ø–Ω—ñ –≤–∞–ª—é—Ç–∏:', value='```USD, EUR, GBP, CNY, PLN```',
                      inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)

#Movies
@client.command()
async def movie(ctx):
    await ctx.channel.purge(limit=1)
    await ctx.send("üïë –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏...")
    await asyncio.sleep(1)
    await ctx.channel.purge(limit=1)
    async with aiohttp.ClientSession() as session:
        request = await session.get('https://k2maan-moviehut.herokuapp.com/api/random')
        movie = await request.json()
        movie_name = movie['name']
        URL = f'https://serpapi.com/search.json?q={movie_name} the movie logo&tbm=isch&ijn=0&api_key=af6cd4b226a344ce4868d8235a465999d1570667f78d9552430f2109ada00516'
        data = requests.get(URL).json()
    embed = discord.Embed(title="üìΩÔ∏è –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º!", color=discord.Color.purple())
    embed.add_field(name="üéûÔ∏è –ù–∞–∑–≤–∞:", value=f"**{ts.google(movie['name'], translator=ts.google, to_language='uk')}**")
    embed.add_field(name="üé¨ –†–µ–∂–∏—Å–µ—Ä:", value=f"**{ts.google(movie['director'], translator=ts.google, to_language='uk')}**")
    embed.add_field(name="üìÜ –†—ñ–∫ –≤–∏–ø—É—Å–∫—É:", value=f"**{movie['releaseYear']}**")
    embed.add_field(name="üïú –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:", value=f"**{ts.google(movie['runtime'], translator=ts.google, to_language='uk')}**")
    embed.add_field(name="üóíÔ∏è –ñ–∞–Ω—Ä–∏:", value=f"**{ts.google(movie['genre'], translator=ts.google, to_language='uk')}**")
    embed.add_field(name="üìä –†–µ–π—Ç–∏–Ω–≥:", value=f"**{movie['imdbRating']}**")
    embed.add_field(name="üìí –û–ø–∏—Å:", value=f"**{ts.google(movie['overview'], translator=ts.google, to_language='uk')}**")
    embed.set_thumbnail(url=f"{data['suggested_searches'][0]['thumbnail']}")
    embed.set_author(name=client.user.name, icon_url=client.user.avatar_url)
    embed.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#ip
@client.command()
async def ip(ctx, ip = None):
    await ctx.channel.purge(limit=1)
    URL = f'http://apiip.net/api/check?ip={ip}&accessKey=37d3f651-c2da-4a26-a6d8-34720fd68c90'
    data = requests.get(URL).json()
    if ip == None:
        emb = discord.Embed(title=":x:–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ ip-–∞–¥—Ä–µ—Å—É!", description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ ip-–∞–¥—Ä–µ—Å, —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.', colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.ip 127.0.0.1```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    elif 'success' in data:
        emb = discord.Embed(title=":x:–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ip-–∞–¥—Ä–µ—Å!",
                            description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ ip-–∞–¥—Ä–µ—Å, —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è.',
                            colour=discord.Color.purple())
        emb.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.ip 127.0.0.1```', inline=False)
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)
    else:
        emb = discord.Embed(title="–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ ip-–∞–¥—Ä–µ—Å—É!",
                            description=f'**IP:** **``{ip}``**',
                            colour=discord.Color.purple())
        emb.add_field(name='–ö–æ–¥ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç—É:', value=data['continentCode'], inline=False)
        emb.add_field(name='–ù–∞–∑–≤–∞ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç—É:', value=data['continentName'], inline=False)
        emb.add_field(name='–ö–æ–¥ –∫—Ä–∞—ó–Ω–∏:', value=data['countryCode'], inline=False)
        emb.add_field(name='–ù–∞–∑–≤–∞ –∫—Ä–∞—ó–Ω–∏:', value=data['countryName'], inline=False)
        emb.add_field(name='–û—Ñ—ñ—Ü—ñ–π–Ω–∞ –Ω–∞–∑–≤–∞ –∫—Ä–∞—ó–Ω–∏:', value=data['officialCountryName'], inline=False)
        emb.add_field(name='–ú—ñ—Å—Ç–æ:', value=data['city'], inline=True)
        emb.add_field(name='–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å:', value=data['postalCode'], inline=False)
        emb.add_field(name='–°—Ç–æ–ª–∏—Ü—è –∫—Ä–∞—ó–Ω–∏:', value=data['capital'], inline=True)
        emb.add_field(name='–ü—Ä–∞–ø–æ—Ä:', value=data['countryFlagEmoj'], inline=True)
        emb.set_thumbnail(url='https://lumpics.ru/wp-content/uploads/2016/05/Programmy-dlya-smeny-IP.png')
        emb.set_author(name=client.user.name, icon_url=client.user.avatar_url)
        emb.set_footer(text=ctx.author.name, icon_url=ctx.author.avatar_url)
        await ctx.author.send(embed=emb)


# Help
@client.command()

async def help(ctx):
    await ctx.channel.purge(limit=1)
    emb = discord.Embed(title='**–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞:**', description='http://horukraine.mypressonline.com', colour = discord.Color.purple())
    emb.set_author(name = client.user.name, icon_url= client.user.avatar_url)
    emb.set_thumbnail(url = 'https://www.upload.ee/image/14236852/_________-2.png')
    emb.set_footer(text = ctx.author.name, icon_url= ctx.author.avatar_url)
    emb.add_field(name = '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:', value="http://horukraine.mypressonline.com/command.html", inline=False)
    emb.add_field(name = '–î–æ–ø–æ–º–æ–≥—Ç–∏ –ó–°–£:', value='https://war.ukraine.ua/donate/', inline=False)
    await ctx.author.send(embed = emb)

@client.event
async def on_message(message):
    await client.process_commands(message)
    msg = message.content.lower()

    if msg in slavauk:
        await message.channel.send("üíô¬†üíõ¬†**–ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞!**¬†üíô¬†üíõ")

    if msg in slavanac:
        await message.channel.send('üíô¬†üíõ¬†**–°–º–µ—Ä—Ç—å –≤–æ—Ä–æ–≥–∞–º!**¬†üíô¬†üíõ')

    if msg in ukponad:
        await message.channel.send('üíô¬†üíõ¬†**–ü–æ–Ω–∞–¥ —É—Å–µ!**¬†üíô¬†üíõ')

token = open('token.txt', 'r').readline()
client.run(token)


